version: '3'

services:
  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/brocker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    depends_on:
      - postgres
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "postgres://postgres:password@host.docker.internal:5433/users?sslmode=disable"

  postgres:
    image: 'postgres:14.17'
    ports:
      - "5433:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
      - ./custom-postgresql.conf:/etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]

  mongo:
    image: 'mongo:4.2.1-bionic'
    ports:
      - "27017:27017"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - './db-data/mongo/:/data/db'

  mailhog:
    image: 'mailhog/mailhog'
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    
  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_USERNAME: ""
      MAIL_PORT: 1025
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      FROM_NAME: "Hassan"
      FROM_ADDRESS: "hassan.akhtar@test.com"
    
  listener-service:
    build:
      context: ./../listener-service
      dockerfile:  ./../listener-service/listener-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1

  rabbitmq:
    image: 'rabbitmq:alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/